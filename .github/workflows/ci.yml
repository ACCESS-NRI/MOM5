name: CI
on:
  pull_request:
jobs:
  build-and-test:
    name: Build and Test
    uses: access-nri/build-ci/.github/workflows/ci.yml@build-ci-2.0
    with:
      # This is the only required input - a path to a jinja-template-able Spack Environment file!
      spack-manifest-path: .github/build-ci/templates/basic.spack.yaml.j2
      ## But there are many other things you can customize...
      ## Like the refs that you want to use for the various repos (including this one).
      # ref: github.sha of this repository
      # spack-config-ref: main
      # spack-packages-ref: main
      # spack-ref: whatever was in the image (releases/v0.22)

      ## As well as paths to other spack.yaml files for installation of compilers and template values
      #   spack-compiler-manifest-path: .github/build-ci/compilers/compiler.spack.yaml
      #   spack-manifest-data-path: .github/build-ci/data/basic.spack.yaml.j2.json

      ## Or allow ssh into the container for debugging
      allow-ssh-into-spack-install: true

  outputs:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - run: |
          echo "The concretization graph is:"
          echo "${{ needs.build-and-test.outputs.spec-concretization-graph }}"
          echo "The files are found in:"
          echo "${{ needs.build-and-test.outputs.spack-files-artifact-url }}"
          echo "The ${{ github.repository }} sha is ${{ needs.build-and-test.outputs.sha }}"
          echo "The spack sha is ${{ needs.build-and-test.outputs.spack-sha }}"
          echo "The spack config sha is: ${{ needs.build-and-test.outputs.spack-config-sha }}"
          echo "The spack packages sha is: ${{ needs.build-and-test.outputs.spack-packages-sha }}"